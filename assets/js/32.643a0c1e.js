(window.webpackJsonp=window.webpackJsonp||[]).push([[32],{543:function(e,a,r){"use strict";r.r(a);var n=r(2),s=Object(n.a)({},(function(){var e=this,a=e.$createElement,r=e._self._c||a;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("h2",{attrs:{id:"graphql"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#graphql"}},[e._v("#")]),e._v(" GraphQL")]),e._v(" "),r("p",[e._v("GraphQl 全称Graph Query Language(SQL: Structured Query Language), 用的是越来越多了。代替rest是可能的，不过一旦设计需要使用Graphql去fetch data的时候，不懂原理的话写起来就会很麻烦。")]),e._v(" "),r("h3",{attrs:{id:"basic"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#basic"}},[e._v("#")]),e._v(" Basic")]),e._v(" "),r("p",[e._v("GraphQl的 Operation Name 分为读取的"),r("code",[e._v("query")]),e._v("，修改的"),r("code",[e._v("mutation")]),e._v(", 和订阅修改的"),r("code",[e._v("subscription")]),e._v("。\n所有的"),r("code",[e._v("{}")]),e._v("为"),r("code",[e._v("root")]),e._v("的都是"),r("code",[e._v("query")]),e._v(", 就像js的匿名函数，所以为了明确最好给一个有意义名字。\n其他terms,"),r("code",[e._v("argument")])]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("{\n  viewer{\n    login\n  }\n}\n")])])]),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("query getLoginUser {\n  viewer{\n    login\n  }\n}\n")])])]),r("h3",{attrs:{id:"fragment"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#fragment"}},[e._v("#")]),e._v(" Fragment")]),e._v(" "),r("p",[e._v("当涉及重复片段时，"),r("code",[e._v("Fragment")]),e._v("是一种解决方法。\n"),r("em",[e._v("empireHero: hero")]),e._v(" 是出现重复key时的alias。")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("query HeroNameAndFriends {\n  empireHero: hero(episode: EMPIRE) {\n    name\n    appearsIn\n    friends {\n      name\n    }\n  }\n  jediHero: hero(episode: JEDI) {\n    name\n    appearsIn\n    friends {\n      name\n    }\n  }\n}\n")])])]),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("query HeroNameAndFriends {\n  empireHero: hero(episode: EMPIRE) {\n    name\n  appearsIn\n  friends {\n    name\n  }\n  }\n  jediHero: hero(episode: JEDI) {\n    ...heroFields\n  }\n}\n\nfragment heroFields on Character {\n  name\n  appearsIn\n  friends {\n    name\n  }\n}\n\n")])])]),r("h3",{attrs:{id:"定义查询时的variables"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#定义查询时的variables"}},[e._v("#")]),e._v(" 定义查询时的"),r("code",[e._v("Variables")])]),e._v(" "),r("p",[e._v("定义变量的方法，"),r("code",[e._v("$...")]),e._v(",并定义类型。\n再以JSON的方式指定"),r("code",[e._v("Query Variables")]),e._v("。\noptional or required "),r("code",[e._v("$episode: Episode!")]),e._v(", "),r("code",[e._v("!")]),e._v("就是requried。")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("query HeroNameAndFriends($episode: Episode!) {\n  hero(episode: $episode) {\n    ...heroFields\n  }\n\n}\n\nfragment heroFields on Character {\n  name\n  appearsIn\n  friends {\n    name\n  }\n}\n")])])]),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v('{\n  "episode": "NEWHOPE"\n}\n')])])]),r("h3",{attrs:{id:"mutaion"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#mutaion"}},[e._v("#")]),e._v(" Mutaion")]),e._v(" "),r("p",[e._v("修改以mutaion开始。\nepisode和review是需要的变量。\n中间的episode和stars是修改之后查询的结果。")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("mutation{\n  createReview(episode:NEWHOPE, review:{stars:3}){\n    episode\n    stars\n  }\n}\n")])])]),r("h3",{attrs:{id:"resources"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#resources"}},[e._v("#")]),e._v(" resources")]),e._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://github.com/apollographql/starwars-server",target:"_blank",rel:"noopener noreferrer"}},[e._v("starwars-server"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://github.com/APIs-guru/graphql-voyager",target:"_blank",rel:"noopener noreferrer"}},[e._v("graphql-voyager"),r("OutboundLink")],1)])])])}),[],!1,null,null,null);a.default=s.exports}}]);